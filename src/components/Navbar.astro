---
import { navMenu } from '../data/navMenu.js';
import { Image } from 'astro:assets';
import unasfestLogo from '../assets/icons/unasfest-logo.png';
---

<header class="sticky z-[99] flex h-full w-full bg-[#FFFAF0] duration-200 top-0">
  <!-- Logo -->
  <div class="border-[rgba(0, 0, 0, 0.10)] h-[80px] w-full border-b-2 border-solid duration-200">
    <div class="container z-50 flex h-full w-full items-center justify-between">
      <a href="/" class="flex cursor-pointer items-center">
        <Image 
          src={unasfestLogo} 
          alt="unasfest logo" 
          width={190} 
          height={56} 
          class="h-[40px] w-[120px] object-contain md:h-[56px] md:w-[190px]"
        />
      </a>
      
      <!-- Mobile Nav Toggle (visible on mobile only) -->
      <div class="md:hidden" id="mobile-menu-toggle">
        <div id="mobile-menu-icon" class="duration-300">
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#004AAD" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="menu-icon">
            <line x1="4" x2="20" y1="12" y2="12"/>
            <line x1="4" x2="20" y1="6" y2="6"/>
            <line x1="4" x2="20" y1="18" y2="18"/>
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#004AAD" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="close-icon hidden">
            <path d="M18 6 6 18"/>
            <path d="m6 6 12 12"/>
          </svg>
        </div>
      </div>
      
      <!-- Navigation Menu (Desktop and Mobile) -->
      <nav class="absolute left-0 -z-50 w-full max-w-none justify-center bg-[#FFFAF0] py-6 duration-200 md:relative md:top-0 md:z-0 md:justify-end -top-96" id="main-nav">
        <ul class="flex flex-col gap-5 text-xl md:flex-row md:text-4xl lg:gap-10 lg:text-xl">
          {navMenu.map(({ title, path, child }) => {
            if (child) {
              return (
                <li class="dropdown-wrapper nav relative">
                  <button class="dropdown-trigger flex items-center justify-between">
                    {title}
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="relative top-[1px] ml-1 h-3 w-3 transition duration-200"><path d="m6 9 6 6 6-6"/></svg>
                  </button>
                  <div class="dropdown-content hidden absolute mt-2 w-[300px] bg-white shadow-lg p-2 z-50">
                    <ul>
                      {child.map((item) => (
                        <li>
                          <a href={item.href} class="block w-[300px] select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:bg-opacity-10 hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground">
                            <p class="line-clamp-2 text-sm leading-snug text-muted-foreground">
                              {item.name}
                            </p>
                          </a>
                        </li>
                      ))}
                    </ul>
                  </div>
                </li>
              );
            }
            return (
              <li class={`${Astro.url.pathname === path ? "nav-active" : "nav"}`}>
                <a href={path} class="navigationMenuTriggerStyle">
                  {title}
                </a>
              </li>
            );
          })}
        </ul>
      </nav>
    </div>
  </div>
</header>

<script>
// Mobile menu toggle functionality
document.addEventListener('DOMContentLoaded', () => {
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mainNav = document.getElementById('main-nav');
  const menuIcon = document.querySelector('.menu-icon');
  const closeIcon = document.querySelector('.close-icon');
  
  mobileMenuToggle?.addEventListener('click', () => {
    // Toggle menu visibility
    if (mainNav?.classList.contains('-top-96')) {
      mainNav.classList.remove('-top-96');
      mainNav.classList.add('top-20');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
    } else {
      mainNav?.classList.remove('top-20');
      mainNav?.classList.add('-top-96');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    }
  });
  
  // Dropdown functionality
  const dropdownTriggers = document.querySelectorAll('.dropdown-trigger');
  
  dropdownTriggers.forEach(trigger => {
    trigger.addEventListener('click', (e) => {
      e.stopPropagation();
      const content = trigger.nextElementSibling;
      
      // Close all other dropdowns
      document.querySelectorAll('.dropdown-content').forEach(dropdown => {
        if (dropdown !== content) {
          dropdown.classList.add('hidden');
        }
      });
      
      // Toggle current dropdown
      content?.classList.toggle('hidden');
    });
  });
  
  // Close dropdowns when clicking outside
  document.addEventListener('click', () => {
    document.querySelectorAll('.dropdown-content').forEach(dropdown => {
      dropdown.classList.add('hidden');
    });
  });
});
</script>

<style>
.navigationMenuTriggerStyle {
  @apply inline-flex w-max items-center justify-center rounded-md text-xl font-medium transition-colors hover:text-active-blue focus:outline-none disabled:pointer-events-none disabled:opacity-50;
}
</style>